name: Website Deployment
on:
  push:
    branches:
      - master
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Install nodeJs 20.11.1
        uses: actions/setup-node@v3
        with:
          node-version: '20.11.1'
      - name: Get code temp
        uses: actions/checkout@v3
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true' #  Check is data was received from cash
        run: npm ci
      - name: Lint code
        run: npm run lint
  test:
    strategy:
      matrix:
        node-version: ['20.11.1', '18']
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Install nodeJs ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true' #  Check is data was received from cash
        run: npm ci
      - name: Test code
        run: npm run test
      - name: Upload test report
        uses: actions/upload-artifact@v3
        with:
          name: test-report
          path: test.json
  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true' #  Check is data was received from cash
        run: npm ci
      - name: Build website
        id: build-website
        run: npm run build
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist-files
          path: dist
  deploy:
    needs: build
    with:
      artifact-name: dist-files
    uses: ./.github/workflows/build-flow.yml
  failure-report:
    needs: [lint, deploy, build]
    if: failure()
    runs-on: ubuntu-latest
    steps:
      - name: Failure information
        run: |
          echo "Something went wrong. See details:"
          echo "${{ github }}"
